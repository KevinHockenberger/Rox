<Window
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:Rox"
        xmlns:Themes="clr-namespace:Microsoft.Windows.Themes;assembly=PresentationFramework.Aero2" x:Class="Rox.delete_me_EeipConfig"
        mc:Ignorable="d"
        Title="EeipConfig" 
        Height="265" Width="395"
        WindowStartupLocation="CenterOwner"
        ShowInTaskbar="False" 
        WindowStyle="None" 
        Background="#FF292929" Padding="6,5,5,5">  
  <!-- bind to enum option: ObjectDataProvider
  add the following to above
        xmlns:sys="clr-namespace:System;assembly=mscorlib"-->

  <Window.Resources>
    <!-- bind to enum option: ObjectDataProvider
    <ObjectDataProvider MethodName="GetValues"
                        ObjectType="{x:Type sys:Enum}"
                        x:Key="myODPkey">
      <ObjectDataProvider.MethodParameters>
        <x:Type TypeName="local:SupportedAdvantechUnits" />
      </ObjectDataProvider.MethodParameters>
    </ObjectDataProvider>-->
    <Style TargetType="{x:Type Label}" BasedOn="{StaticResource {x:Type Label}}">
      <Setter Property="FontSize" Value="16"/>
      <Setter Property="HorizontalAlignment" Value="Right"/>
    </Style>
    <Style TargetType="{x:Type TextBox}" BasedOn="{StaticResource {x:Type TextBox}}">
      <Setter Property="FontSize" Value="16"/>
      <Setter Property="Background" Value="#FF292929"/>
      <Setter Property="Foreground" Value="#FFFFFFFF"/>
      <Setter Property="VerticalContentAlignment" Value="Center"/>
    </Style>
    <Style TargetType="{x:Type TextBlock}" BasedOn="{StaticResource {x:Type TextBlock}}">
      <Setter Property="FontSize" Value="16"/>
      <Setter Property="Background" Value="#FF292929"/>
      <Setter Property="Foreground" Value="#FFFFFFFF"/>
    </Style>
    <Style TargetType="{x:Type ComboBox}" BasedOn="{StaticResource {x:Type ComboBox}}">
      <Setter Property="FontSize" Value="16"/>
      <Setter Property="Background" Value="#FF292929"/>
      <Setter Property="Foreground" Value="#FFFFFFFF"/>
    </Style>
    <Style TargetType="{x:Type Border}" x:Key="CellBorder">
      <Setter Property="Padding" Value="1,5,5,1" />
    </Style>
    <Style TargetType="ComboBoxItem" BasedOn="{StaticResource {x:Type ComboBoxItem}}">
      <Setter Property="Background" Value="#FF292929"/>
      <Setter Property="BorderBrush" Value="#FF292929"/>
      <Setter Property="Foreground" Value="#FFFFFFFF"/>
    </Style>
    <ControlTemplate x:Key="cmbStyle" TargetType="{x:Type ComboBox}">
      <Grid x:Name="templateRoot" SnapsToDevicePixels="True">
        <Grid.ColumnDefinitions>
          <ColumnDefinition Width="*"/>
          <ColumnDefinition MinWidth="{DynamicResource {x:Static SystemParameters.VerticalScrollBarWidthKey}}" Width="0"/>
        </Grid.ColumnDefinitions>
        <Popup x:Name="PART_Popup" AllowsTransparency="True" Grid.ColumnSpan="2" IsOpen="{Binding IsDropDownOpen, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}" Margin="1" PopupAnimation="{DynamicResource {x:Static SystemParameters.ComboBoxPopupAnimationKey}}" Placement="Bottom">
          <Themes:SystemDropShadowChrome x:Name="shadow" Color="Transparent" MaxHeight="{TemplateBinding MaxDropDownHeight}" MinWidth="{Binding ActualWidth, ElementName=templateRoot}">
            <Border x:Name="DropDownBorder" BorderBrush="{DynamicResource {x:Static SystemColors.WindowFrameBrushKey}}" BorderThickness="1" Background="#FF292929">
              <ScrollViewer x:Name="DropDownScrollViewer">
                <Grid x:Name="grid" RenderOptions.ClearTypeHint="Enabled">
                  <Canvas x:Name="canvas" HorizontalAlignment="Left" Height="0" VerticalAlignment="Top" Width="0">
                    <Rectangle x:Name="OpaqueRect" Fill="{Binding Background, ElementName=DropDownBorder}" Height="{Binding ActualHeight, ElementName=DropDownBorder}" Width="{Binding ActualWidth, ElementName=DropDownBorder}"/>
                  </Canvas>
                  <ItemsPresenter x:Name="ItemsPresenter" KeyboardNavigation.DirectionalNavigation="Contained" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                </Grid>
              </ScrollViewer>
            </Border>
          </Themes:SystemDropShadowChrome>
        </Popup>
        <ToggleButton x:Name="toggleButton" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" Grid.ColumnSpan="2" IsChecked="{Binding IsDropDownOpen, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}">
          <ToggleButton.Style>
            <Style TargetType="{x:Type ToggleButton}">
              <Setter Property="OverridesDefaultStyle" Value="True"/>
              <Setter Property="IsTabStop" Value="False"/>
              <Setter Property="Focusable" Value="False"/>
              <Setter Property="ClickMode" Value="Press"/>
              <Setter Property="Template">
                <Setter.Value>
                  <ControlTemplate TargetType="{x:Type ToggleButton}">
                    <Border x:Name="templateRoot" BorderBrush="#FFACACAC" BorderThickness="{TemplateBinding BorderThickness}" SnapsToDevicePixels="True">
                      <Border.Background>
                        <SolidColorBrush Color="#FF292929" />
                        <!--<LinearGradientBrush EndPoint="0,1" StartPoint="0,0">
                          <GradientStop Color="#FFF0F0F0" Offset="0"/>
                          <GradientStop Color="#FFE5E5E5" Offset="1"/>
                        </LinearGradientBrush>-->
                      </Border.Background>
                      <Border x:Name="splitBorder" BorderBrush="Transparent" BorderThickness="1" HorizontalAlignment="Right" Margin="0" SnapsToDevicePixels="True" Width="{DynamicResource {x:Static SystemParameters.VerticalScrollBarWidthKey}}">
                        <Path x:Name="Arrow" Data="F1M0,0L2.667,2.66665 5.3334,0 5.3334,-1.78168 2.6667,0.88501 0,-1.78168 0,0z" Fill="#FF606060" HorizontalAlignment="Center" Margin="0" VerticalAlignment="Center"/>
                      </Border>
                    </Border>
                    <ControlTemplate.Triggers>
                      <MultiDataTrigger>
                        <MultiDataTrigger.Conditions>
                          <Condition Binding="{Binding IsEditable, RelativeSource={RelativeSource FindAncestor, AncestorLevel=1, AncestorType={x:Type ComboBox}}}" Value="true"/>
                          <Condition Binding="{Binding IsMouseOver, RelativeSource={RelativeSource Self}}" Value="false"/>
                          <Condition Binding="{Binding IsPressed, RelativeSource={RelativeSource Self}}" Value="false"/>
                          <Condition Binding="{Binding IsEnabled, RelativeSource={RelativeSource Self}}" Value="true"/>
                        </MultiDataTrigger.Conditions>
                        <Setter Property="Background" TargetName="templateRoot" Value="White"/>
                        <Setter Property="BorderBrush" TargetName="templateRoot" Value="#FFABADB3"/>
                        <Setter Property="Background" TargetName="splitBorder" Value="Transparent"/>
                        <Setter Property="BorderBrush" TargetName="splitBorder" Value="Transparent"/>
                      </MultiDataTrigger>
                      <Trigger Property="IsMouseOver" Value="True">
                        <Setter Property="Fill" TargetName="Arrow" Value="Black"/>
                      </Trigger>
                      <MultiDataTrigger>
                        <MultiDataTrigger.Conditions>
                          <Condition Binding="{Binding IsMouseOver, RelativeSource={RelativeSource Self}}" Value="true"/>
                          <Condition Binding="{Binding IsEditable, RelativeSource={RelativeSource FindAncestor, AncestorLevel=1, AncestorType={x:Type ComboBox}}}" Value="false"/>
                        </MultiDataTrigger.Conditions>
                        <Setter Property="Background" TargetName="templateRoot">
                          <Setter.Value>
                            <SolidColorBrush Color="#FF292929" />

                            <!--<LinearGradientBrush EndPoint="0,1" StartPoint="0,0">
                              <GradientStop Color="#FFECF4FC" Offset="0"/>
                              <GradientStop Color="#FFDCECFC" Offset="1"/>
                            </LinearGradientBrush>-->
                          </Setter.Value>
                        </Setter>
                        <Setter Property="BorderBrush" TargetName="templateRoot" Value="#FF7EB4EA"/>
                      </MultiDataTrigger>
                      <MultiDataTrigger>
                        <MultiDataTrigger.Conditions>
                          <Condition Binding="{Binding IsMouseOver, RelativeSource={RelativeSource Self}}" Value="true"/>
                          <Condition Binding="{Binding IsEditable, RelativeSource={RelativeSource FindAncestor, AncestorLevel=1, AncestorType={x:Type ComboBox}}}" Value="true"/>
                        </MultiDataTrigger.Conditions>
                        <Setter Property="Background" TargetName="templateRoot" Value="White"/>
                        <Setter Property="BorderBrush" TargetName="templateRoot" Value="#FF7EB4EA"/>
                        <Setter Property="Background" TargetName="splitBorder">
                          <Setter.Value>
                             <SolidColorBrush Color="#FF292929" />
                           <!--<LinearGradientBrush EndPoint="0,1" StartPoint="0,0">
                              <GradientStop Color="#FFEBF4FC" Offset="0"/>
                              <GradientStop Color="#FFDCECFC" Offset="1"/>
                            </LinearGradientBrush>-->
                          </Setter.Value>
                        </Setter>
                        <Setter Property="BorderBrush" TargetName="splitBorder" Value="#FF7EB4EA"/>
                      </MultiDataTrigger>
                      <Trigger Property="IsPressed" Value="True">
                        <Setter Property="Fill" TargetName="Arrow" Value="Black"/>
                      </Trigger>
                      <MultiDataTrigger>
                        <MultiDataTrigger.Conditions>
                          <Condition Binding="{Binding IsPressed, RelativeSource={RelativeSource Self}}" Value="true"/>
                          <Condition Binding="{Binding IsEditable, RelativeSource={RelativeSource FindAncestor, AncestorLevel=1, AncestorType={x:Type ComboBox}}}" Value="false"/>
                        </MultiDataTrigger.Conditions>
                        <Setter Property="Background" TargetName="templateRoot">
                          <Setter.Value>
                            <LinearGradientBrush EndPoint="0,1" StartPoint="0,0">
                              <GradientStop Color="#FFDAECFC" Offset="0"/>
                              <GradientStop Color="#FFC4E0FC" Offset="1"/>
                            </LinearGradientBrush>
                          </Setter.Value>
                        </Setter>
                        <Setter Property="BorderBrush" TargetName="templateRoot" Value="#FF569DE5"/>
                      </MultiDataTrigger>
                      <MultiDataTrigger>
                        <MultiDataTrigger.Conditions>
                          <Condition Binding="{Binding IsPressed, RelativeSource={RelativeSource Self}}" Value="true"/>
                          <Condition Binding="{Binding IsEditable, RelativeSource={RelativeSource FindAncestor, AncestorLevel=1, AncestorType={x:Type ComboBox}}}" Value="true"/>
                        </MultiDataTrigger.Conditions>
                        <Setter Property="Background" TargetName="templateRoot" Value="White"/>
                        <Setter Property="BorderBrush" TargetName="templateRoot" Value="#FF569DE5"/>
                        <Setter Property="Background" TargetName="splitBorder">
                          <Setter.Value>
                            <LinearGradientBrush EndPoint="0,1" StartPoint="0,0">
                              <GradientStop Color="#FFDAEBFC" Offset="0"/>
                              <GradientStop Color="#FFC4E0FC" Offset="1"/>
                            </LinearGradientBrush>
                          </Setter.Value>
                        </Setter>
                        <Setter Property="BorderBrush" TargetName="splitBorder" Value="#FF569DE5"/>
                      </MultiDataTrigger>
                      <Trigger Property="IsEnabled" Value="False">
                        <Setter Property="Fill" TargetName="Arrow" Value="#FFBFBFBF"/>
                      </Trigger>
                      <MultiDataTrigger>
                        <MultiDataTrigger.Conditions>
                          <Condition Binding="{Binding IsEnabled, RelativeSource={RelativeSource Self}}" Value="false"/>
                          <Condition Binding="{Binding IsEditable, RelativeSource={RelativeSource FindAncestor, AncestorLevel=1, AncestorType={x:Type ComboBox}}}" Value="false"/>
                        </MultiDataTrigger.Conditions>
                        <Setter Property="Background" TargetName="templateRoot" Value="#FFF0F0F0"/>
                        <Setter Property="BorderBrush" TargetName="templateRoot" Value="#FFD9D9D9"/>
                      </MultiDataTrigger>
                      <MultiDataTrigger>
                        <MultiDataTrigger.Conditions>
                          <Condition Binding="{Binding IsEnabled, RelativeSource={RelativeSource Self}}" Value="false"/>
                          <Condition Binding="{Binding IsEditable, RelativeSource={RelativeSource FindAncestor, AncestorLevel=1, AncestorType={x:Type ComboBox}}}" Value="true"/>
                        </MultiDataTrigger.Conditions>
                        <Setter Property="Background" TargetName="templateRoot" Value="White"/>
                        <Setter Property="BorderBrush" TargetName="templateRoot" Value="#FFBFBFBF"/>
                        <Setter Property="Background" TargetName="splitBorder" Value="Transparent"/>
                        <Setter Property="BorderBrush" TargetName="splitBorder" Value="Transparent"/>
                      </MultiDataTrigger>
                    </ControlTemplate.Triggers>
                  </ControlTemplate>
                </Setter.Value>
              </Setter>
            </Style>
          </ToggleButton.Style>
        </ToggleButton>
        <ContentPresenter x:Name="contentPresenter" ContentTemplate="{TemplateBinding SelectionBoxItemTemplate}" Content="{TemplateBinding SelectionBoxItem}" ContentStringFormat="{TemplateBinding SelectionBoxItemStringFormat}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" IsHitTestVisible="False" Margin="{TemplateBinding Padding}" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
      </Grid>
      <ControlTemplate.Triggers>
        <Trigger Property="HasDropShadow" SourceName="PART_Popup" Value="True">
          <Setter Property="Margin" TargetName="shadow" Value="0,0,5,5"/>
          <Setter Property="Color" TargetName="shadow" Value="#71000000"/>
        </Trigger>
        <Trigger Property="HasItems" Value="False">
          <Setter Property="Height" TargetName="DropDownBorder" Value="95"/>
        </Trigger>
        <MultiTrigger>
          <MultiTrigger.Conditions>
            <Condition Property="IsGrouping" Value="True"/>
            <Condition Property="VirtualizingPanel.IsVirtualizingWhenGrouping" Value="False"/>
          </MultiTrigger.Conditions>
          <Setter Property="ScrollViewer.CanContentScroll" Value="False"/>
        </MultiTrigger>
        <Trigger Property="CanContentScroll" SourceName="DropDownScrollViewer" Value="False">
          <Setter Property="Canvas.Top" TargetName="OpaqueRect" Value="{Binding VerticalOffset, ElementName=DropDownScrollViewer}"/>
          <Setter Property="Canvas.Left" TargetName="OpaqueRect" Value="{Binding HorizontalOffset, ElementName=DropDownScrollViewer}"/>
        </Trigger>
      </ControlTemplate.Triggers>
    </ControlTemplate>
  </Window.Resources>
  <DockPanel>
    <Grid Height="35" DockPanel.Dock="Top">
      <Grid.ColumnDefinitions>
        <ColumnDefinition Width="35"/>
        <ColumnDefinition/>
        <ColumnDefinition Width="35"/>
      </Grid.ColumnDefinitions>
      <Border MouseDown="_MouseDown" Grid.Column="1" BorderThickness="1" CornerRadius="2" BorderBrush="White">
        <Grid>
          <Border BorderThickness="2,0" CornerRadius="2" BorderBrush="#FF97B3CB" Margin="2">
            <TextBlock x:Name="txtTitle" Margin="5,0" Padding="2" Text="Keyence Ethernet/IP Settings" HorizontalAlignment="Center"/>
          </Border>
        </Grid>
      </Border>
      <Border BorderBrush="White" BorderThickness="1" CornerRadius="2">
        <Button Template="{DynamicResource ButtonBaseControlTemplate}" x:Name="btnMenu" Background="{x:Null}" >
          <Canvas Width="30" Height="30">
            <Canvas.Background>
              <ImageBrush ImageSource="include/ite.ico"/>
            </Canvas.Background>
          </Canvas>
        </Button>
      </Border>
      <Border Grid.Column="2" BorderBrush="White" BorderThickness="1" CornerRadius="2">
        <Button Template="{DynamicResource ButtonBaseControlTemplate}" x:Name="btnClose" Content="X" Click="btnClose_Click" Foreground="Red" VerticalContentAlignment="Center" HorizontalContentAlignment="Center" FontSize="20" Background="{x:Null}"/>
      </Border>
    </Grid>
    <Grid x:Name="ucPlugin" Margin="10">
      <Grid.ColumnDefinitions>
        <ColumnDefinition Width="Auto"/>
        <ColumnDefinition />
      </Grid.ColumnDefinitions>
      <Grid.RowDefinitions>
        <RowDefinition Height="Auto"/>
        <RowDefinition Height="Auto"/>
        <RowDefinition Height="Auto"/>
        <RowDefinition Height="Auto"/>
        <RowDefinition Height="Auto"/>
      </Grid.RowDefinitions>
      <Border Style="{StaticResource CellBorder}" Grid.Row="0">
        <Label Content="Enabled:"/>
      </Border>
      <Border Style="{StaticResource CellBorder}" Grid.Row="0" Grid.Column="1" >
        <CheckBox x:Name="chkEnabled" IsChecked="{Binding Enabled}" HorizontalAlignment="Left"  VerticalAlignment="Center"/>
      </Border>
      <Border Style="{StaticResource CellBorder}" Grid.Row="1">
        <Label Content="Ip Address:"/>
      </Border>
      <Border Style="{StaticResource CellBorder}" Grid.Row="1" Grid.Column="1" >
        <TextBox x:Name="txtIpAddress" Text="{Binding IpAddress}"/>
      </Border>
      <Border Style="{StaticResource CellBorder}" Grid.Row="2" >
        <Label Content="Port:" />
      </Border>
      <Border Style="{StaticResource CellBorder}" Grid.Row="2" Grid.Column="1" >
        <TextBox x:Name="txtPort" Text="{Binding Port}"/>
      </Border>
      <Border Style="{StaticResource CellBorder}" Grid.Row="3">
        <Label Content="Input Assembly Id:" />
      </Border>
      <Border Style="{StaticResource CellBorder}" Grid.Row="3" Grid.Column="1" >
        <TextBox x:Name="txtAssemblyIn" Text="{Binding AssemblyIn}"/>
      </Border>
      <Border Style="{StaticResource CellBorder}" Grid.Row="4">
        <Label Content="Output Assembly Id:" />
      </Border>
      <Border Style="{StaticResource CellBorder}" Grid.Row="45" Grid.Column="1" >
        <TextBox x:Name="txtAssemblyOut" Text="{Binding AssemblyOut}"/>
      </Border>
    </Grid>
  </DockPanel>
</Window>
